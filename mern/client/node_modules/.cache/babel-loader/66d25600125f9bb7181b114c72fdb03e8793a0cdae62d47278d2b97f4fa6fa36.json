{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cjmar\\\\OneDrive\\\\Documents\\\\Fall22\\\\CEN3031\\\\QuadraTech\\\\mern\\\\client\\\\src\\\\components\\\\webpages\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { LOGIN } from \"../../features/counter/authSlice\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLanding = () => {\n  _s();\n  const dispatch = useDispatch();\n  const toast = useToast();\n  const history = useHistory();\n  useEffect(() => {\n    let currentURL = window.location.href;\n    console.log(currentURL);\n    const params = new URLSearchParams(currentURL);\n    // parse the id token from the URL\n    const idToken = params.get(\"id_token\");\n    if (idToken !== null) {\n      // sending to backend to get back JWT\n      axios.post(`${process.env.REACT_APP_API_URL}auth/google`, {\n        token: idToken\n      }).then(res => {\n        if (res.status === 201) {\n          dispatch(LOGIN(res.data));\n          history.push(\"/home\");\n        }\n      }).catch(err => {\n        console.log(err);\n        toast({\n          title: \"Failed to Load\",\n          description: \"Something went wrong on our side!\",\n          status: \"error\",\n          duration: 10,\n          isClosable: false,\n          position: \"top\"\n        });\n      });\n    } else {\n      console.log(\"no token\");\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Google Landing Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s(GoogleLanding, \"Pqcu8xZ4s5OvA+OdxxgjLHVxrZQ=\", false, function () {\n  return [useDispatch, useToast, useHistory];\n});\n_c = GoogleLanding;\nexport default GoogleLanding;\nvar _c;\n$RefreshReg$(_c, \"GoogleLanding\");","map":{"version":3,"names":["React","useEffect","axios","useDispatch","LOGIN","useToast","useHistory","GoogleLanding","dispatch","toast","history","currentURL","window","location","href","console","log","params","URLSearchParams","idToken","get","post","process","env","REACT_APP_API_URL","token","then","res","status","data","push","catch","err","title","description","duration","isClosable","position"],"sources":["C:/Users/cjmar/OneDrive/Documents/Fall22/CEN3031/QuadraTech/mern/client/src/components/webpages/login.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LOGIN } from \"../../features/counter/authSlice\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GoogleLanding = () => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let currentURL = window.location.href;\r\n    console.log(currentURL);\r\n    const params = new URLSearchParams(currentURL);\r\n    // parse the id token from the URL\r\n    const idToken = params.get(\"id_token\");\r\n    if (idToken !== null) {\r\n      // sending to backend to get back JWT\r\n      axios\r\n          .post(`${process.env.REACT_APP_API_URL}auth/google`, {\r\n            token: idToken,\r\n          })\r\n          .then((res) => {\r\n            if (res.status === 201) {\r\n              dispatch(LOGIN(res.data));\r\n              history.push(\"/home\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            toast({\r\n              title: \"Failed to Load\",\r\n              description: \"Something went wrong on our side!\",\r\n              status: \"error\",\r\n              duration: 10,\r\n              isClosable: false,\r\n              position: \"top\",\r\n            });\r\n          });\r\n    } else {\r\n      console.log(\"no token\");\r\n    }\r\n  }, [history]);\r\n  return <div>Google Landing Page</div>;\r\n};\r\n\r\nexport default GoogleLanding;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,kCAAkC;AACxD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,UAAU,QAAQ,kBAAkB;AAAC;AAE9C,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,KAAK,GAAGJ,QAAQ,EAAE;EACxB,MAAMK,OAAO,GAAGJ,UAAU,EAAE;EAE5BL,SAAS,CAAC,MAAM;IACd,IAAIU,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI;IACrCC,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;IACvB,MAAMM,MAAM,GAAG,IAAIC,eAAe,CAACP,UAAU,CAAC;IAC9C;IACA,MAAMQ,OAAO,GAAGF,MAAM,CAACG,GAAG,CAAC,UAAU,CAAC;IACtC,IAAID,OAAO,KAAK,IAAI,EAAE;MACpB;MACAjB,KAAK,CACAmB,IAAI,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,aAAY,EAAE;QACnDC,KAAK,EAAEN;MACT,CAAC,CAAC,CACDO,IAAI,CAAEC,GAAG,IAAK;QACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;UACtBpB,QAAQ,CAACJ,KAAK,CAACuB,GAAG,CAACE,IAAI,CAAC,CAAC;UACzBnB,OAAO,CAACoB,IAAI,CAAC,OAAO,CAAC;QACvB;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdjB,OAAO,CAACC,GAAG,CAACgB,GAAG,CAAC;QAChBvB,KAAK,CAAC;UACJwB,KAAK,EAAE,gBAAgB;UACvBC,WAAW,EAAE,mCAAmC;UAChDN,MAAM,EAAE,OAAO;UACfO,QAAQ,EAAE,EAAE;UACZC,UAAU,EAAE,KAAK;UACjBC,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ,CAAC,CAAC;IACR,CAAC,MAAM;MACLtB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB;EACF,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EACb,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA8B;AACvC,CAAC;AAAC,GAvCIH,aAAa;EAAA,QACAJ,WAAW,EACdE,QAAQ,EACNC,UAAU;AAAA;AAAA,KAHtBC,aAAa;AAyCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}